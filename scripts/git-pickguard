#!/bin/bash

set -euo pipefail

ACTION=${1:-}
SOURCE_BRANCH=${2:-}
REPO_ROOT=$(git rev-parse --show-toplevel)
HOOK_PATH="$REPO_ROOT/.git/hooks/pre-push"
LOCK_FILE="$REPO_ROOT/.git/pickguard.lock"

REQUIRED_BLOCK=$(cat <<'EOF'
# ---- Custom push-blocker ----
LOCK_FILE=$(git rev-parse --show-toplevel)/.git/pickguard.lock
if [ -f "$LOCK_FILE" ]; then
  current_branch=$(git rev-parse --abbrev-ref HEAD)
  lock_branch=$(grep '^branch:' "$LOCK_FILE" | awk '{print $2}')
  if [ "$current_branch" = "$lock_branch" ]; then
    echo "‚õîÔ∏è Push blocked: Pickguard is active on branch '$current_branch'."
    echo "Run 'git pickguard disable' after completing your pickmerge."
    exit 1
  fi
fi
EOF
)

# --- Usage guard ---
if [[ "$ACTION" != "enable" && "$ACTION" != "disable" ]]; then
  echo "Usage: git pickguard enable <source-branch> | disable"
  exit 1
fi

CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

# --- Enable guard ---
if [[ "$ACTION" == "enable" ]]; then
  if [[ -z "$SOURCE_BRANCH" ]]; then
    echo "‚ÄºÔ∏è You must specify a source branch to mark as merged."
    exit 1
  fi

  if ! git show-ref --verify --quiet refs/heads/"$SOURCE_BRANCH"; then
    echo "‚ÄºÔ∏è Source branch '$SOURCE_BRANCH' does not exist locally."
    exit 1
  fi

  # Validate pre-push hook
  if [[ ! -f "$HOOK_PATH" ]]; then
    echo "‚ÄºÔ∏è Missing required Git hook at: $HOOK_PATH"
    echo "Please create it with the following content:"
    echo ""
    echo "$REQUIRED_BLOCK"
    exit 1
  fi

  if ! grep -q "LOCK_FILE=" "$HOOK_PATH"; then
    echo "‚ÄºÔ∏è Git hook found but missing pickguard branch check."
    echo "Please add the following block to the top of $HOOK_PATH:"
    echo ""
    echo "$REQUIRED_BLOCK"
    exit 1
  fi

  echo "üîí Creating branch-specific lock file: $LOCK_FILE"
  {
    echo "branch: $CURRENT_BRANCH"
    echo "source: $SOURCE_BRANCH"
  } > "$LOCK_FILE"

  echo "‚ö†Ô∏è  Performing temporary 'ours' merge of '$SOURCE_BRANCH' into '$CURRENT_BRANCH'"
  git merge --no-ff -s ours "$SOURCE_BRANCH" -m "Temporarily marking $SOURCE_BRANCH as merged (after squash merge)"

  echo "‚úÖ Guard enabled for '$CURRENT_BRANCH'. Push is blocked until disabled."
  echo "üí° Run: git pickguard disable"

# --- Disable guard ---
elif [[ "$ACTION" == "disable" ]]; then
  echo "üîì Removing push block: $LOCK_FILE"
  rm -f "$LOCK_FILE"

  echo "‚Ü©Ô∏è  Reverting temporary merge commit"
  git reset --hard HEAD~1

  echo "‚úÖ Guard disabled for '$CURRENT_BRANCH'. Repository restored to previous state."
fi
